# What is extendr?

::: callout-tip
## Objective

Learn the different components of the extendr ecosystem.
:::

`extendr` is a project that focuses on _extending_ R with Rust. It is comprised of:

- [rextendr](https://extendr.github.io/rextendr/)
- [extendr-ffi](https://extendr.github.io/extendr/extendr_ffi)
- [extendr-api](https://extendr.github.io/extendr/extendr_api)
- [extendr-engine](https://extendr.github.io/extendr/extendr_engine)

::: callout-note
There is no single "extendr" library. Rather, that is the name of the project.
:::

## `extendr-ffi`

`extendr-ffi` defines the types and functions in R's C API using Rust functions and types. As R's C API changes, `extendr-ffi` is responsible for ensuring that packages are backwards compatible.

Fortunately, we will never have to touch this layer. Everything is built on top of this crate.

## `extendr-api`

`extendr-api` is the high-level crate that is built upon `extendr-ffi`. It makes working with R types such as vectors feel fairly natural from a Rust perspective. It handles the oddities of garbage collection and everything else related to the FFI boundary.

We will spend the rest of the workshop using the extendr-api crate.

## `extendr-engine`

The `extendr-engine` is focused on the opposite directionâ€”calling R _from_ Rust. It enables us to start an R process inside of Rust as well as execute R code in that R process. It can be used in creating Rust-based CLI tools that call R or whatever else your imagination can think up.

## rextendr

- it is a usethis-like package for Rust and R
- it creates package scaffolding for us
- we document our extendr packages with it
- helps us prepare our packages for CRAN releases
- also has a knitr engine that can be used to compile rust code into an R Markdown document
- we will be using this heavily today.
